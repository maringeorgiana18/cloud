### STAGE 1: Build ###
# FROM node:14.15.5 AS buildxyz
# WORKDIR /usr/src/app
# COPY package.json package-lock.json ./
# RUN npm install
# COPY . .
# RUN npm run build
### STAGE 2: Run ###
# FROM nginx:1.19-alpine
# COPY nginx.conf /etc/nginx/nginx.conf
# COPY --from=buildxyz /usr/src/app/dist/angular-client-app /usr/share/nginx/html



# # Create image based on the official Node 10 image from dockerhub
# FROM node:10

# # Create a directory where our app will be placed
# RUN mkdir -p /app

# # Change directory so that our commands run inside this new directory
# WORKDIR /app

# # Copy dependency definitions
# COPY package*.json /app/

# # Install dependencies
# RUN npm install

# # Get all the code needed to run the app
# COPY . /app/

# # Serve the app
# CMD ["ng", "serve", "--host"]




# FROM node:14.15.5 as builder

# WORKDIR /app

# ENV PATH /app/node_modules/.bin:$PATH

# COPY package.json /app/package.json
# RUN npm install
# RUN npm install -g @angular/cli@11.0.5


# COPY . /app
# # EXPOSE 4200
# CMD ng build --prod
# CMD ng serve --host 0.0.0.0 --port 4200 --disable-host-check

# CMD npm run -- ng serve --host 0.0.0.0 --disable-host-check


# # Use official nginx image as the base image
# FROM nginx:latest

# # Copy the build output to replace the default nginx contents.
# COPY --from=build /usr/local/app/dist/sample-angular-app /usr/share/nginx/html

# Expose port 80
# EXPOSE 80

# # Name the node stage "builder"
# FROM node:10 AS builder
# # Set working directory
# WORKDIR /app
# # Copy all files from current directory to working dir in image
# COPY . .
# # install node modules and build assets
# RUN npm i && npm run build
# # nginx state for serving content
# FROM nginx:alpine
# # Set working directory to nginx asset directory
# WORKDIR /usr/share/nginx/html
# # Remove default nginx static assets
# RUN rm -rf ./*
# # Copy static assets from builder stage
# COPY --from=builder /app/dist/licenta-front-end .
# # Containers run nginx with global directives and daemon off
# EXPOSE 4200:80
# ENTRYPOINT ["nginx", "-g", "daemon off;"]


FROM node:14.15.5 AS builder
WORKDIR /app
COPY . .
RUN npm install && \
    npm run build --force
FROM nginx:alpine
COPY --from=builder /app/dist/* /usr/share/nginx/html/
COPY /nginx.conf /etc/nginx/conf.d/default.conf
